// Generated by view binder compiler. Do not edit!
package com.example.open_cv_android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.open_cv_android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomSheetDialogBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button BtnDismiss;

  @NonNull
  public final Button BtnResize;

  @NonNull
  public final TextView idTVCourseDuration;

  @NonNull
  public final EditText imgHeight;

  @NonNull
  public final EditText imgWidth;

  private BottomSheetDialogBinding(@NonNull CardView rootView, @NonNull Button BtnDismiss,
      @NonNull Button BtnResize, @NonNull TextView idTVCourseDuration, @NonNull EditText imgHeight,
      @NonNull EditText imgWidth) {
    this.rootView = rootView;
    this.BtnDismiss = BtnDismiss;
    this.BtnResize = BtnResize;
    this.idTVCourseDuration = idTVCourseDuration;
    this.imgHeight = imgHeight;
    this.imgWidth = imgWidth;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomSheetDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomSheetDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottom_sheet_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomSheetDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.BtnDismiss;
      Button BtnDismiss = ViewBindings.findChildViewById(rootView, id);
      if (BtnDismiss == null) {
        break missingId;
      }

      id = R.id.BtnResize;
      Button BtnResize = ViewBindings.findChildViewById(rootView, id);
      if (BtnResize == null) {
        break missingId;
      }

      id = R.id.idTVCourseDuration;
      TextView idTVCourseDuration = ViewBindings.findChildViewById(rootView, id);
      if (idTVCourseDuration == null) {
        break missingId;
      }

      id = R.id.imgHeight;
      EditText imgHeight = ViewBindings.findChildViewById(rootView, id);
      if (imgHeight == null) {
        break missingId;
      }

      id = R.id.imgWidth;
      EditText imgWidth = ViewBindings.findChildViewById(rootView, id);
      if (imgWidth == null) {
        break missingId;
      }

      return new BottomSheetDialogBinding((CardView) rootView, BtnDismiss, BtnResize,
          idTVCourseDuration, imgHeight, imgWidth);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
